generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or "mysql"
  url      = env("DATABASE_URL")
}

model Category {
  id        Int        @id @default(autoincrement())
  name      String
  menuItems MenuItem[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
}

model MenuItem {
  id          Int        @id @default(autoincrement())
  name        String
  price       Float
  categoryId  Int
  category    Category   @relation(fields: [categoryId], references: [id]) // no cascade
  orderItems  OrderItem[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model InventoryLog {
  id         Int            @id @default(autoincrement())
  itemName   String
  quantity   Int
  changeType ChangeType     // ENUM instead of free text
  createdAt  DateTime       @default(now())
}

model Order {
  id          Int         @id @default(autoincrement())
  tableNumber Int
  status      OrderStatus  // ENUM instead of free text
  orderItems  OrderItem[]
  payments    Payment[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model OrderItem {
  id         Int       @id @default(autoincrement())
  orderId    Int
  menuItemId Int
  quantity   Int
  order      Order     @relation(fields: [orderId], references: [id], onDelete: Cascade)
  menuItem   MenuItem  @relation(fields: [menuItemId], references: [id], onDelete: Cascade)
}

model Payment {
  id             Int            @id @default(autoincrement())
  orderId        Int
  amount         Float
  method         PaymentMethod
  transactionRef String?        // QR / Bank ref (nullable for cash)
  order          Order          @relation(fields: [orderId], references: [id]) // no cascade
  createdAt      DateTime       @default(now())

  @@unique([method, transactionRef])
}

enum PaymentMethod {
  CASH
  MOBILE_BANKING
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}

enum ChangeType {
  INCREASE
  DECREASE
}
